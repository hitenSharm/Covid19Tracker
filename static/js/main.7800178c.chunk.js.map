{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","console","log","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","findCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","calue","i","key","App","state","fetchedData","setState","this","image","src","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7800178c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2oSqV\",\"card\":\"Cards_card__1grR4\",\"infected\":\"Cards_infected__Kf8Sj\",\"recovered\":\"Cards_recovered__32wDQ\",\"deaths\":\"Cards_deaths__2Znd_\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards=({data: { confirmed,recovered,deaths,lastUpdate } })=>{\r\n    if(!confirmed)\r\n        return 'Loading...';\r\n    \r\n    return(\r\n     <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    \r\n    let changeableUrl=url;\r\n    if(country)\r\n        {\r\n            changeableUrl=`${url}/countries/${country}`;\r\n            console.log(changeableUrl);\r\n        }\r\n    \r\n    try {\r\n        const {\r\n            data: {\r\n                confirmed,\r\n                recovered,\r\n                deaths,\r\n                lastUpdate\r\n            }\r\n        } = await axios.get(changeableUrl);\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        };\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async ()=>{\r\n    try{\r\n        const { data }= await axios.get('https://covid19.mathdro.id/api/daily');\r\n//        console.log(data);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n//        console.log(modifiedData);\r\n    return modifiedData;    \r\n    }catch(error){\r\n\r\n}\r\n        \r\n}\r\nexport const findCountries= async ()=>{\r\n    try{\r\n        const {data:{ countries }}= await axios.get('https://covid19.mathdro.id/api/countries');\r\n        return countries.map((country)=>country.name);\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n}\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart=({ data: { confirmed, recovered, deaths }, country })=>{\r\n   const [dailyData, setDailyData]=  useState([]);\r\n    \r\n   useEffect(()=>{\r\n       const fetchAPI= async ()=>{\r\n           setDailyData(await fetchDailyData());\r\n       }\r\n         fetchAPI();    \r\n   },[]);\r\n    const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  ); \r\n  \r\n    const lineChart = (\r\n    dailyData.length \r\n        ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n    \r\n    \r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { findCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker=({handleCountryChange})=>{\r\n    \r\n    const [fetchedCountries,setFetchedCountries]=useState([]);\r\n    \r\n    useEffect(()=> {\r\n        const fetchCountries= async()=>{\r\n            setFetchedCountries(await findCountries());\r\n        }\r\n        fetchCountries();\r\n    },[setFetchedCountries]);\r\n    \r\n    \r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n            <option calue=\"global\">Global</option>  \r\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport {fetchData} from './api'; \r\nimport styles from './App.module.css';\r\n\r\nclass App extends React.Component {\r\n\r\nstate= {\r\n    data:{},\r\n    country:'',\r\n}    \r\n\r\n    async componentDidMount() {\r\n        const fetchedData=await fetchData();\r\n        this.setState({data: fetchedData})\r\n    }\r\n\r\nhandleCountryChange=async(country)=>{\r\n    console.log(country);\r\n    const fetchedData= await fetchData(country);\r\n    console.log(fetchedData);\r\n    this.setState({data: fetchedData , country: country});\r\n    \r\n}\r\n    \r\n    render(){\r\n        const {data,country}=this.state;\r\n        return(\r\n           \r\n            <div className={styles.container}>\r\n                 <img className={styles.image} src='https://www.leaders-in-law.com/wp-content/uploads/2020/03/COVID-19.png'/>\r\n            <Cards data={data}/>\r\n            <Chart data={data} country={country}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3MT99\",\"image\":\"App_image__2dpu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3ICdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2t87q\"};"],"sourceRoot":""}